{"version":3,"file":"book-form.component.js","sourceRoot":"","sources":["book-form.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input} from 'angular2/core';\nimport {RouteData, RouteParams} from 'angular2/router';\nimport {ControlGroup, ControlArray, FormBuilder, Validators} from 'angular2/common';\nimport {DateValidator} from '../validators/date.validator'\nimport {IsbnValidator} from '../validators/isbn.validator'\nimport {Book} from '../domain/book'\nimport {BookStoreService} from '../services/books/book-store.service'\n\n@Component({\n  selector: 'book-form',\n  moduleId: __moduleName,\n  templateUrl: 'book-form.component.html',\n  providers: [BookStoreService]\n})\nexport class BookFormComponent {\n  myForm: ControlGroup;\n  authorsControlArray: ControlArray;\n  thumbnailsControlArray: ControlArray;\n\n  constructor(private fb: FormBuilder, private routeData: RouteData, private routeParams: RouteParams, private bs: BookStoreService) {\n    let book = {\n      title: '',\n      subtitle: '',\n      isbn: '',\n      description: '',\n      authors: [''],\n      thumbnails:[{url:'', title:''}],\n      published: new Date()\n    };\n\n    if(routeData.get('mode') === 'update') book = bs.getSingle(routeParams.get('isbn'));\n\n    this.myForm = this.fb.group({\n      title: [book.title, Validators.required],\n      subtitle: [book.subtitle],\n      isbn: [book.isbn, Validators.compose([\n        Validators.required,\n        IsbnValidator.isbn\n        /* TODO Async check if isbn exists */\n      ])],\n      description: [book.description],\n      authors: this.fb.array(book.authors, Validators.required),\n      thumbnails: this.fb.array(\n        book.thumbnails.map(\n          t => this.fb.group({\n            url: this.fb.control(t.url, Validators.required),\n            title: this.fb.control(t.title)\n          })\n        )\n      ),\n      published: [book.published] // , DateValidator.germanDate\n    });\n\n    // this allows us to manipulate the form at runtime\n    this.authorsControlArray = <ControlArray>this.myForm.controls['authors'];\n    this.thumbnailsControlArray = <ControlArray>this.myForm.controls['thumbnails'];\n  }\n\n  addAuthorControl(){\n    this.authorsControlArray.push(this.fb.control(''));\n  }\n\n  addThumbnailControl(){\n    this.thumbnailsControlArray.push(this.fb.group({ url: [''], title: ['']} ));\n  }\n\n  submitForm(formData){\n    this.routeData.get('mode') === 'update' ? this.bs.update(formData) : this.bs.create(formData);\n  }\n}\n"]}