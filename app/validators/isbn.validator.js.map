{"version":3,"file":"isbn.validator.js","sourceRoot":"","sources":["../../home/travis/build/Angular2Buch/TMP/BookMonkey/tmp/broccoli_type_script_compiler-input_base_path-uzcb8LdK.tmp/0/src/app/validators/isbn.validator.ts"],"names":[],"mappings":";AAGA;IAAA;IAUA,CAAC;IATQ,kBAAI,GAAX,UAAY,OAAgB;QAC1B,IAAI,eAAe,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACvD,IAAI,WAAW,GAAG,wBAAwB,CAAC;QAC3C,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;QACxB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,oBAAC;AAAD,CAAC,AAVD,IAUC;AAVY,qBAAa,gBAUzB,CAAA","sourcesContent":["import { Control } from '@angular/common';\nimport { ValidationResult } from './validation-result';\n\nexport class IsbnValidator {\n  static isbn(control: Control): ValidationResult {\n    let isolatedNumbers = control.value.replace(/\\D/g, '');\n    let isbnPattern = /(^\\d{10}$)|(^\\d{13}$)/g;\n    if (!isolatedNumbers.match(isbnPattern)) {\n      return {\"isbn\": true};\n    }\n\n    return null;\n  }\n}\n"]}